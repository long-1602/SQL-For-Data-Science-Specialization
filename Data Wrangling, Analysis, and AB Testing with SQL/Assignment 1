-- Use users table to pull a list of user email addresses.
SELECT 
  id AS user_id, email_address
  FROM dsv1069.users
  WHERE deleted_at is NULL 

--Use the items table to count the number of items for sale in each category
SELECT category, 
  COUNT(id) AS item_count
FROM dsv1069.items
GROUP BY category
ORDER BY item_count DESC

--Select all of the columns from the result when you JOIN the users table to the orders table
SELECT *
FROM dsv1069.orders
JOIN dsv1069.users
ON orders.user_id = users.id

--Count the number of viewed_item events
SELECT
COUNT(DISTINCT event_id) AS events
FROM dsv1069.events
WHERE event_name = 'view_item'

--Compute the Number of Items Which Have Been Ordered
SELECT
  COUNT(DISTINCT orders.item_id) AS item_count
FROM dsv1069.users

-- Figure out if a user has ordered something
SELECT
  users.id AS user_id,
  MIN(orders.paid_at) AS min_paid_at
FROM 
  dsv1069.users
LEFT OUTER JOIN
  dsv1069.orders
ON 
  orders.user_id = users.id
GROUP BY
users.id

-- Figure out what percent of users have ever viewed the user profile pagey
SELECT
  (CASE WHEN first_view IS NULL THEN false
  ELSE true end) AS has_viewed_profile_page,
COUNT(user_id) as users
FROM
  (
  SELECT
    users.id as user_id,
    MIN(event_time) as first_view
  FROM
    dsv1069.users
  LEFT OUTER JOIN
    dsv1069.events
  ON
    events.user_id = users.id
  AND
    events.event_name = 'view_user_profile'
  GROUP BY
    users.id
  ) first_profile_views
GROUP BY
  (CASE WHEN first_view IS NULL THEN false
    ELSE true END)
