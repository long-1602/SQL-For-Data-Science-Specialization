Part 1: Yelp Dataset Profiling and Understanding
1. Profile the data by finding the total number of records for each of the tables below:
i. SELECT count (*) FROM attribute
Attribute table = 10000
ii. SELECT count (*) FROM business
Business table = 10000
iii. SELECT count (*) FROM category
Category table = 10000
iv. SELECT count (*) FROM checkin
Checkin table = 10000
v. SELECT count (*) FROM elite_years
elite_years table = 10000
vi. SELECT count (*) FROM friend
friend table = 10000
vii. SELECT count (*) FROM hours
hours table = 10000
viii. SELECT count (*) FROM photo
photo table = 10000
ix. SELECT count (*) FROM review
review table = 10000
x. SELECT count (*) FROM tip
tip table = 10000
xi. SELECT count (*) FROM user
user table = 10000


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.
i. SELECT count (distinct id) FROM business
Business = 10000 
ii. SELECT count (distinct business_id) FROM hours
Hours = 1562
iii. SELECT count (distinct business_id) FROM category
Category = 2643
iv. SELECT count (distinct business_id) FROM attribute
Attribute = 1115
v. SELECT count (distinct business_id), count(distinct user_id), count(distinct id) FROM attribute
Review = 8090 (business_id), 9581 (user_id), 1000 (id)
vi. SELECT count (distinct business_id) FROM checkin
Checkin = 493
vii. SELECT count (distinct id), count (distinct business_id)  FROM photo
Photo = 1000 (id), 6493 (business_id)
viii. SELECT count (distinct business_id), count (distinct user_id) FROM tip
Tip = 3979 (business_id), 537 (user_id)
ix. SELECT count (distinct id) FROM user
User = 1000
x. SELECT count (distinct user_id) FROM friend
Friend = 11
xi. SELECT count (distinct user_id) FROM Elite_years
Elite_years = 2780
Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.        


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."
        Answer: No
        SQL code used to arrive at answer:
SELECT count (NULL) FROM user
        
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:


        i. Table: Review, Column: Stars
        SELECT MAX(stars), MIN(stars), AVG(stars) FROM review
                min: 1                max: 5                avg: 3.7082
                
        SELECT MAX(stars), MIN(stars), AVG(stars) FROM business
        ii. Table: Business, Column: Stars
                Min: 1                max: 5                avg: 3.6549
        SELECT MAX(likes), MIN(likes), AVG(likes) FROM tip
        iii. Table: Tip, Column: Likes
                min: 0                max: 2                avg: 0.0144


        SELECT MAX(count), MIN(count), AVG(count) FROM checkin
        iv. Table: Checkin, Column: Count
                min: 1                max: 53        avg: 1.9414
                
        SELECT MAX(review_count), MIN(review_count), AVG(review_count) FROM user
        v. Table: User, Column: Review_count
                min: 0                max: 2000        avg: 24.2995
                
5. List the cities with the most reviews in descending order:
SQL code used to arrive at answer:
SELECT sum(review_count) AS total_reviews, city
FROM business
GROUP BY city
ORDER BY total_reviews DESC
Copy and Paste the Result Below:
+---------------+-----------------+
| total_reviews | city            |
+---------------+-----------------+
|         82854 | Las Vegas       |
|         34503 | Phoenix         |
|         24113 | Toronto         |
|         20614 | Scottsdale      |
|         12523 | Charlotte       |
|         10871 | Henderson       |
|         10504 | Tempe           |
|          9798 | Pittsburgh      |
|          9448 | Montréal        |
|          8112 | Chandler        |
|          6875 | Mesa            |
|          6380 | Gilbert         |
|          5593 | Cleveland       |
|          5265 | Madison         |
|          4406 | Glendale        |
|          3814 | Mississauga     |
|          2792 | Edinburgh       |
|          2624 | Peoria          |
|          2438 | North Las Vegas |
|          2352 | Markham         |
|          2029 | Champaign       |
|          1849 | Stuttgart       |
|          1520 | Surprise        |
|          1465 | Lakewood        |
|          1155 | Goodyear        |
+---------------+-----------------+
(Output limit exceeded, 25 of 362 total rows shown)


6. Find the distribution of star ratings to the business in the following cities:


i. Avon
SQL code used to arrive at answer:
SELECT stars AS star_rating, count(stars) AS count
FROM business
WHERE city = "Avon"
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+-------+
| star_rating | count |
+-------------+-------+
|         1.5 |     1 |
|         2.5 |     2 |
|         3.5 |     3 |
|         4.0 |     2 |
|         4.5 |     1 |
|         5.0 |     1 |
+-------------+-------+


ii. Beachwood
SQL code used to arrive at answer:
SELECT stars AS star_rating, count(stars) AS count
FROM business
WHERE city = "Beachwood"
GROUP BY stars
Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+-------+
| star_rating | count |
+-------------+-------+
|         2.0 |     1 |
|         2.5 |     1 |
|         3.0 |     2 |
|         3.5 |     2 |
|         4.0 |     1 |
|         4.5 |     2 |
|         5.0 |     5 |
+-------------+-------+


7. Find the top 3 users based on their total number of reviews:
SQL code used to arrive at answer:
SELECT name, sum(review_count) AS total_reviews 
FROM user
GROUP BY name
ORDER BY total_reviews DESC
                




Copy and Paste the Result Below:
+-----------+---------------+
| name      | total_reviews |
+-----------+---------------+
| Nicole    |          2397 |
| Sara      |          2253 |
| Gerald    |          2034 |


8. Does posting more reviews correlate with more fans?
        Please explain your findings and interpretation of the results:
Posting more reviews does not directly correlate with more fans. There are accounts with a lot of fans that have significantly less reviews than accounts with less fans.


SELECT review_count, fans
FROM user
ORDER BY review_count DESC
+--------------+------+
| review_count | fans |
+--------------+------+
|         2000 |  253 |
|         1629 |   50 |
|         1339 |   76 |
|         1246 |  101 |
|         1215 |  126 |
|         1153 |  311 |
|         1116 |   16 |
|         1039 |  104 |
|          968 |  497 |
|          930 |  173 |
|          904 |   38 |
|          864 |   43 |
|          862 |  124 |
|          861 |  115 |
|          842 |   85 |
|          836 |   37 |
|          834 |  120 |
|          813 |  159 |
|          775 |   61 |
|          754 |   78 |
|          702 |   35 |
|          696 |   10 |
|          694 |  101 |
|          676 |   25 |
|          675 |   45 |
+--------------+------+
9. Are there more reviews with the word "love" or with the word "hate" in them?
        Answer: There are more reviews with the word “love” in them.
        SQL code used to arrive at answer:
SELECT word, count(*) count
FROM (
      SELECT CASE WHEN LOWER(text) LIKE '%love%' THEN 'love'
                  WHEN LOWER(text) LIKE '%hate%' THEN 'hate' 
                  END AS word
      FROM review)
GROUP BY word


10. Find the top 10 users with the most fans:
SQL code used to arrive at answer:
SELECT fans, name 
FROM user
ORDER BY fans DESC




Copy and Paste the Result Below:
+------+-----------+
| fans | name      |
+------+-----------+
|  503 | Amy       |
|  497 | Mimi      |
|  311 | Harald    |
|  253 | Gerald    |
|  173 | Christine |
|  159 | Lisa      |
|  133 | Cat       |
|  126 | William   |
|  124 | Fran      |
|  120 | Lissa     |
                        


Part 2: Inferences and Analysis
1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
The city I chose is Toronto and the category I chose is food.
+-----------+-----------------------+--------------+-----------------+-------------+
| stars     | hours                 | review_count | neighborhood    | postal_code |
+-----------+-----------------------+--------------+-----------------+-------------+
| 4-5 stars | Wednesday|18:00-2:00  |  26 | High Park       | M6P 1A6     |
| 4-5 stars | Wednesday|15:00-21:00 |  15 | Wallace Emerson | M6H 1V5     |
| 4-5 stars | Tuesday|18:00-2:00    |   26 | High Park      | M6P 1A6     |
| 4-5 stars | Tuesday|15:00-21:00   | 15 | Wallace Emerson  | M6H 1V5     |
| 4-5 stars | Thursday|18:00-2:00   |  26 | High Park       | M6P 1A6     |
| 4-5 stars | Thursday|15:00-21:00  | 15 | Wallace Emerson  | M6H 1V5     |
| 4-5 stars | Sunday|16:00-2:00     |  26 | High Park       | M6P 1A6     |
| 4-5 stars | Sunday|11:00-21:00    | 15 | Wallace Emerson  | M6H 1V5     |
| 4-5 stars | Saturday|16:00-2:00   | 26 | High Park        | M6P 1A6     |
| 4-5 stars | Saturday|11:00-21:00  | 15 | Wallace Emerson  | M6H 1V5     |
| 4-5 stars | Monday|16:00-2:00     |  26 | High Park       | M6P 1A6     |
| 4-5 stars | Friday|18:00-2:00     | 26 | High Park        | M6P 1A6     |
| 4-5 stars | Friday|15:00-21:00    |  15 | Wallace Emerson | M6H 1V5     |
| 2-3 stars | Wednesday|8:00-22:00  |  10 | Roncesvalles    | M6R 1X3     |
| 2-3 stars | Tuesday|8:00-22:00    |  10 | Roncesvalles    | M6R 1X3     |
| 2-3 stars | Thursday|8:00-22:00   | 10 | Roncesvalles     | M6R 1X3     |
| 2-3 stars | Sunday|8:00-22:00     |  10 | Roncesvalles    | M6R 1X3     |
| 2-3 stars | Saturday|8:00-22:00   |  10 | Roncesvalles    | M6R 1X3     |
| 2-3 stars | Monday|8:00-22:00     |  10 | Roncesvalles    | M6R 1X3     |
| 2-3 stars | Friday|8:00-22:00     | 10 | Roncesvalles     | M6R 1X3     |
+-----------+-----------------------+--------------+-----------------+-------------+
i. Do the two groups you chose to analyze have a different distribution of hours?
There is a different distribution of hours. The 2-3 stars restaurants have hours 8-22 and the 4-5 stars restaurants have hours 18-2 and 15-21.
ii. Do the two groups you chose to analyze have a different number of reviews?
The 2 groups have a different number of reviews. The 2-3 star restaurants have 10 reviews and the 4-5 star restaurants have 15 or 26 reviews.
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
The 2-3 star restaurants are all in the same zip code as each other and the 4-5 star reviews are all in the same zip code as each other. The two groups show up in two different zip codes.
SQL code used for analysis:
SELECT CASE
    WHEN stars >= 4.0 THEN '4-5 stars'
    WHEN (stars>= 2.0 AND stars <=3.0) THEN '2-3 stars'
    END AS 'stars', hours.hours, review_count, neighborhood, postal_code
FROM business 
    INNER JOIN category ON business.id = category.business_id
    INNER JOIN hours ON business.id = hours.business_id
        WHERE city = 'Toronto' 
        AND category = 'Food'
        AND (stars>=4.0 OR (stars <3.0 and stars >2.0))
        ORDER BY stars DESC, hours DESC        
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.        
+----------------------+-------------------+---------------+---------+
| number_of_businesses | number_of_reviews | average_stars | is_open |
+----------------------+-------------------+---------------+---------+
|                 1520 |     23.1980263158                 | 3.52039473684 |       0 |
|                 8480 |     31.7570754717                 | 3.67900943396 |       1 |
+----------------------+-------------------+---------------+---------+
i. Difference 1
The businesses that are still open have a larger amount of reviews for them than those that closed.         
ii. Difference 2:
The businesses that are still open have a higher average star rating than those that closed.
SQL code used for analysis:
SELECT 
    COUNT(distinct business.id) AS number_of_businesses,
    avg(review_count) AS number_of_reviews,
    avg(stars) AS average_stars,
    is_open
FROM business
GROUP BY is_open
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.


Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
i. Indicate the type of analysis you chose to do:
         What type of business has the most success?
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
        For my analysis I will need to gather data on the types of businesses, the amount of reviews they get (to show traction), the average number of stars they get (to show their popularity), and their opening rate (to show their sustainability).                  
iii. Output of your finished dataset: +------------------------+------------------------------+-----------------------+--------------------+--------------------+
| category               | avg stars | avg review_count | avg is_open | number_of_business |
+------------------------+-------------------------+-------------------------+------------------------+-----------------+
| American (Traditional) |        3.82 |        102.55 |         0.727272727273 |                 11 |
| Bars                   |         3.5 |         77.76 |         0.647058823529 |                 17 |
| Beauty & Spas          |        3.88 |          9.15 |         0.923076923077 |                 13 |
| Food                   |        3.78 |         77.43 |         0.869565217391 |                 23 |
| Health & Medical       |        4.09 |         11.94 |         0.941176470588 |                 17 |
| Home Services          |         4.0 |          5.88 |                 0.9375 |                 16 |
| Local Services         |        4.21 |          8.33 |         0.833333333333 |                 12 |
| Nightlife              |        3.48 |         67.55 |                    0.6 |                 20 |
| Restaurants            |        3.46 |         63.44 |         0.746478873239 |                 71 |
| Shopping               |        3.98 |         32.57 |         0.833333333333 |                 30 |
+------------------------+-----------------------+--------------------------+------------------------+--------------------+
We can see that food is the most successful business type because it has many openings, many reviews, and an above average rating.         
iv. Provide the SQL code you used to create your final dataset:
SELECT 
    category.category,
    round(avg(business.stars),2),
    round(avg(business.review_count),2),
    avg (business.is_open),
    count(business.id) AS number_of_business
FROM (business INNER JOIN category ON business.id = category.business_id)
GROUP BY category.category
HAVING number_of_business > 10